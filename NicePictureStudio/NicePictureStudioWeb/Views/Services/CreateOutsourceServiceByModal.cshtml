@model NicePictureStudio.App_Data.OutsourceService

<script type="text/javascript">
    $(document).ready(function () {

        $("#@ViewData["ButtonIdForDWL"]").on("change",function (item) {
            event.preventDefault();
            var selectedItem = $("#@ViewData["ButtonIdForDWL"]").val();
            alert(selectedItem);
            $.ajax({
                url: '@Url.Action("CreateOutsourceServiceByModal","Services")',
                data: { id: selectedItem, serviceType: '@ViewData["ServiceType"]' },
                type: "GET",
                success: function (data) { $("#@ViewData["DivServiceForm"]").replaceWith(data); }
            });
        });
    });

</script>

<div id="@ViewData["DivServiceForm"]">
    @using (Ajax.BeginForm("CreateOutsourceServiceTable", "Services", new AjaxOptions
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = @ViewData["tblequipment"].ToString()
    }))
    {
        @Html.AntiForgeryToken()

    <div class="form-group col-lg-12">
        @Html.Label("OutsourceServices :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="list-group col-md-10">
            @Html.DropDownList("Code", @ViewData["OutsourceList"] as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-group", @id = ViewData["ButtonIdForDWL"], @name = ViewData["ButtonIdForDWL"] })
        </div>
    </div>

        <div class="form-horizontal">
            <h4>OutsourceService</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PortFolioURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PortFolioURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortFolioURL, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.OutsourceId, "OutsourceId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OutsourceId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OutsourceId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.OutsourceContact.OutsourceContactId, htmlAttributes: new { @id = "OutsourceId", @Name = "OutsourceId" })
            <input type="hidden" id="ServiceType" name="ServiceType" value="@ViewData["ServiceType"]" />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div id="@ViewData["tblequipment"].ToString()">
    @if (@ViewBag.ListOutsourceServices != null)
        {
        <div class="form-group">
            <table class="table table-striped">
                <tr><th>Outsource Name</th><th>Description</th><th>PortFolio</th><th>Price</th><th>Action</th></tr>
                @foreach (NicePictureStudio.Models.OutsourceServiceViewModel item in ViewBag.ListOutsourceServices)
                {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                            <td>@item.PortFolioURL</td>
                            <td>@item.Price</td>
                            <td>@Ajax.ActionLink("Remove", "RemoveOutsource", new { Id = @item.Id, serviceType = @ViewData["ServiceType"].ToString() }, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = @ViewData["tblequipment"].ToString() })</td>
                        </tr>
                }
            </table>
        </div>
    }
    </div>
    </div>

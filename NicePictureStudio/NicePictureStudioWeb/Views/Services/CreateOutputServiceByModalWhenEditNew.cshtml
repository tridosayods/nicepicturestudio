@model NicePictureStudio.App_Data.OutputService

<script type="text/javascript">
    $(document).ready(function () {

        $("#btnBackStepToPhotoGraph").on("click", function () {
            event.preventDefault();
            var url = '@Url.Action("MainFilterPhotoGrapServiceWhenEditNew", "Services")';
            $.ajax({
                url: url,
                data: { id: $("#page1Id").val(), serviceType: '@ViewData["ServiceType"]', IsEditTable : '@ViewBag.IsEditTable' },
                type: "GET",
                success: function (data) { $("#ServiceSelection").replaceWith(data); }
            })
        });
    });

    function ValidateSummary()
    {
        $("#page2Id").val($("#Code").val());
    }

</script>

<div id="divOutput">
    @using (Ajax.BeginForm("CreateOutputServiceTableWhenEditNew", "Services", new AjaxOptions
        {
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "tblOutput"
        }))
    {
        <div class="form-horizontal">
            <h4>OutputService</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutputURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OutputURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OutputURL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @Html.HiddenFor(model => model.Cost)

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Hand-On Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Kendo().DateTimePicker().Name("HandOnDate")
                    @Html.ValidationMessage("HandOnDate", "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="hidden" id="ServiceType" name="ServiceType" value="@ViewData["ServiceType"]" />
            <input type="hidden" id="Code" name="Code" value="@Model.Id" />
            @Html.Hidden("IsEditTable", new { IsEditTable = @ViewBag.IsEditTable })

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add OutputService" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div id="tblOutput">
        @if (@ViewBag.ListOutputServices != null)
        {
            <div class="form-group">
                <table class="table table-striped">
                    <tr><th>Outsource Name</th><th>Description</th><th>OutputURL</th><th>Price</th><th>Action</th></tr>
                    @foreach (NicePictureStudio.Models.OutputServiceViewModel item in ViewBag.ListOutputServices)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                            <td>@item.OutputURL</td>
                            <td>@item.Price</td>
                            <td>@Ajax.ActionLink("Remove", "RemoveOutputWhenEditNew", new { Id = @item.Id, serviceType = @ViewData["ServiceType"].ToString(), IsEditTable = @ViewBag.IsEditTable }, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "tblOutput" })</td>
                        </tr>
                    }
                </table>
            </div>
        }
    </div>
    @using (Ajax.BeginForm("ThirdFilterLocationServiceWhenEditNew", "Services", new AjaxOptions
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "ServiceSelection",
            OnBegin = "ValidateSummary"
        }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" id="ServiceType" name="ServiceType" value="@ViewData["ServiceType"]" />
        @Html.Hidden("IsEditTable", new { IsEditTable = @ViewBag.IsEditTable })
        <button type="button" id="btnBackStepToPhotoGraph" value="Back to Previous step">Back to Previous Step</button>
        <button type="submit" id="btnNextStepToLocation" value="Next">Next</button>
    }
</div>






@model NicePictureStudio.App_Data.Service

@{
    ViewBag.Title = "Create";
}

@*<script src="/Scripts/jquery-1.10.2.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        alert("READY");
        // Hide the "busy" Gif at load:
       // $("#ServiceFromSection").show();

        $("#btnHidden").on("click", function (event) { event.preventDefault(); $("#PreWeddingFromSection").hide(); });
    });

    function showServiceForm()
    {
        $("#PreWeddingFromSection").show();
    }

    function toggle_visibility(id) {
        var e = document.getElementById(id);
        if (e.style.display == 'block' || e.style.display == '') {
            e.style.display = 'none';
        }
        else {
            e.style.display = 'block';
        }
    }

    @*$("#btnSubmitServiceForm").click(function () {
        alert("Do somthing");
        event.preventDefault();
        $("#ServiceFromSection").show();
        var url = '@Url.Action("ServiceForms")';
        $.ajax({
            url: url,
            type: "GET",
            dataType: "json",
            //success: function (data) { $("#ServiceFromSection").replaceWith(data); },
            success: function(data) {alert("xxxxxxxxxxxxxx");},
            fail: alert("Noooo....")
        })
    });*@
</script>

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
     
    <div class="form-horizontal">
        <h4>Service</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Booking No:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("BookingId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Bookings, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroomName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroomName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroomName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrideName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BrideName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrideName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialRequest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialRequest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialRequest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PayAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PayAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CRMFormId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CRMFormId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRMFormId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<!-- Create Customer Form Section-->
<div class="navbar-form">
    <div class="form-control">
        @using (@Ajax.BeginForm("CreateCustomerFromService", "Customers", new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "CustomerFromService"
            }))
        {
            <button id="btnAddCustomerForm" class="col-md-2" type="submit">Add New Customer</button>
        }
    </div>
    <div id="CustomerFromService"></div>
</div>

<!-- Create Service Form Section-->
<div class="form-horizontal">
    <div class="form-control">
        @using (@Ajax.BeginForm("ShowServiceFormById", "ServiceForms", new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "PreWeddingFromSection",
                OnSuccess = "showServiceForm()"
            }))
        {
            <!-- Temporary use hidden value -->
            <input type="text" hidden="hidden" value="1" id="serviceFormId" name="serviceFormId" />
            <button id="btnSubmitServiceForm" class="col-md-2" type="submit">Click!!!!</button>
        }
        <button id="btnHidden" class="col-md-2" type="button">Hide</button>
    </div>
</div>

<div class="table-bordered">
    <button id="togPreWedService" type="button" class="btn btn-default btn-lg" onclick="toggle_visibility('PreWeddingFromSection')"><span class="glyphicon glyphicon-star"></span></button>
    <div id="PreWeddingFromSection"></div>
</div>

<div class="table-bordered">
    <button id="togEngagementService" type="button" class="btn btn-default btn-lg"><span class="glyphicon glyphicon-star"></span></button>
    <div id="EngagementFromSection"></div>
</div>

<div class="table-bordered">
    <button id="togWeddingService" type="button" class="btn btn-default btn-lg"><span class="glyphicon glyphicon-star"></span></button>
    <div id="WeddingFromSection"></div>
</div>
<div id="ServiceFormsScheduler">
    @(Html.Kendo().Scheduler<NicePictureStudio.Models.EquipmentSchedulerViewModel>()
    .Name("EqpScheduler")
    .Messages(msg =>
    {
        msg.Cancel("ยกเลิก");
        msg.Save("ยืนยัน");
        msg.Destroy("ลบรายการ");

    })
    .Date(DateTime.Today)
    .StartTime(DateTime.Today)
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WeekView();
        views.MonthView(montview => montview.Selected(true));
        views.AgendaView();
    })
        .Editable(editable =>
        {
            editable.TemplateName("EquipmentScheduleTemplate");
            editable.Create(false);
            editable.Resize(false);
            editable.Destroy(false);
        })
            //.BindTo(Model)
            //.Timezone("Etc/UTC")
        .Resources(resource =>
        {
            resource.Add(m => m.selectedStatus)
                .Title("Room")
                .DataTextField("Text")
                .DataValueField("Value")
                .DataColorField("Color")
                .BindTo(new[] {
                      new { Text = "รายการใหม่", Value = 1, Color = "\\#FFBF00" },
                            new { Text = "ยืนยัน", Value = 2, Color = "\\#6eb3fa" },
                            new { Text = "เสร็จสิ้นการให้บริการ", Value = 3, Color = "\\#01DF01" },
                            new { Text = "ยกเลิก", Value = 4, Color = "\\#A4A4A4" },
                                 new { Text = "ยกเลิกล่าช้ากว่ากำหนด", Value = 5, Color = "\\#FF0000" }
                });
            //resource.Add(m => m.Attendees)
            //    .Title("Attendees")
            //    .Multiple(true)
            //    .DataTextField("Text")
            //    .DataValueField("Value")
            //    .DataColorField("Color")
            //    .BindTo(new[] {
            //        new { Text = "Alex", Value = 1, Color = "#f8a398" },
            //        new { Text = "Bob", Value = 2, Color = "#51a0ed" },
            //        new { Text = "Charlie", Value = 3, Color = "#56ca85" }
            //    });
        })
        .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.Id);
                m.Field(f => f.Title).DefaultValue("No title");
                //m.RecurrenceId(f => f.RecurrenceID);
            })
            .ServerOperation(true)
                .Events(e => { e.Error("error_handler"); e.RequestEnd("RefreshScheduler"); })
                        .Read("Equipments_Read", "EquipmentSchedules", new
                    {
                        phothgraphId = @ViewBag.PhotographerId,
                        serviceTypeId = @ViewBag.ServiceTypeId,
                        statusId = @ViewBag.Status,
                        isConfirm = ViewBag.IsConfirm,
                        isNotFinish = @ViewBag.IsNotFinish
                    })
            //.Create("Equipments_Update", "EquipmentSchedules")
            //.Destroy("Employees_Destroy", "EmployeeSchedules")
                .Update("Equipments_Update", "EquipmentSchedules")

        )
    )



    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);

                var scheduler = $("#EqpScheduler").data("kendoScheduler");
                scheduler.one("dataBinding", function (e) {
                    //prevent saving if server error is thrown
                    e.preventDefault();
                })
            }
        }

        function RefreshScheduler() {
            //$('#EqpScheduler').data().kendoScheduler.view($('#EqpScheduler').data().kendoScheduler._selectedViewName);
            @*var scheduler = $('#EqpScheduler').data("kendoScheduler");
        var data = $('#EqpScheduler').getKendoScheduler();
        var source = new kendo.data.SchedulerDataSource({
            transport: {
                read: {url:'@Url.Action("Equipments_Read", "EquipmentSchedules")',dataType: "jsonp"}
            }
        });
        data.dataSource.fetch(source);
        scheduler.refresh();
        alert(source);*@

            var scheduler = $('#EqpScheduler').data("kendoScheduler");
            //scheduler.dataSource().refresh();
            scheduler.refresh();
        }


    </script>

</div>